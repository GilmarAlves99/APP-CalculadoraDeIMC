{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gilmar Alves\\\\Desktop\\\\reactNative\\\\aula2\\\\onebithealth\\\\src\\\\components\\\\Form\\\\ResultImc\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles from \"./style\";\nexport default function ResultImc(props) {\n  var onShare = function onShare() {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: \"Meu imc é: \" + props.resultImc\n            }));\n\n          case 2:\n            result = _context.sent;\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.resultImc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 1\n    }\n  }, React.createElement(Text, {\n    style: styles.information,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 1\n    }\n  }, props.messageResultImc), React.createElement(Text, {\n    style: styles.numberImc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 1\n    }\n  }, props.resultImc));\n}","map":{"version":3,"sources":["C:/Users/Gilmar Alves/Desktop/reactNative/aula2/onebithealth/src/components/Form/ResultImc/index.js"],"names":["React","styles","ResultImc","props","onShare","Share","share","message","resultImc","result","information","messageResultImc","numberImc"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACxC,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACSC,KAAK,CAACC,KAAN,CAAY;AAC7BC,cAAAA,OAAO,EAAC,gBAAgBJ,KAAK,CAACK;AADD,aAAZ,CADT;;AAAA;AACNC,YAAAA,MADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAKI,SAIJ,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACS,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCP,KAAK,CAACQ,gBAAxC,CADA,EAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCT,KAAK,CAACK,SAAtC,CAFA,CAJI;AAWH","sourcesContent":["import React from \"react\"\r\nimport { View, Text, Share, TouchableOpacity } from \"react-native\"\r\nimport styles from \"./style\";\r\nexport default function ResultImc(props){\r\nconst onShare = async() => {\r\n    const result = await Share.share({\r\n        message:\"Meu imc é: \" + props.resultImc,\r\n    })\r\n}\r\n    return(\r\n\r\n  \r\n\r\n<View style={styles.resultImc}>\r\n<Text style={styles.information}>{props.messageResultImc}</Text>\r\n<Text style={styles.numberImc}>{props.resultImc}</Text>\r\n  \r\n</View>\r\n\r\n    );\r\n} "]},"metadata":{},"sourceType":"module"}